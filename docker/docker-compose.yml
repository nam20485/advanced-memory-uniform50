version: '3.8'

services:
  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.25.1
    container_name: advanced-memory-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_PLUGINS=["graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=gds.*,apoc.*
      - NEO4J_dbms_security_procedures_allowlist=gds.*,apoc.*
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - advanced-memory-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p password 'RETURN 1'"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:v1.9.4
    container_name: advanced-memory-qdrant
    ports:
      - "6333:6333"  # REST API
      - "6334:6334"  # gRPC
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - advanced-memory-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:6333/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis Cache (Optional)
  redis:
    image: redis:7.2.5-alpine
    container_name: advanced-memory-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - advanced-memory-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # MCP Server
  mcp-server:
    build:
      context: ../
      dockerfile: src/AdvancedMemory.MCP/Dockerfile
    container_name: advanced-memory-mcp
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=password
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - REDIS_CONNECTION_STRING=redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      neo4j:
        condition: service_healthy
      qdrant:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - advanced-memory-network
    restart: unless-stopped

  # API Gateway
  api-gateway:
    build:
      context: ../
      dockerfile: src/AdvancedMemory.API/Dockerfile
    container_name: advanced-memory-api
    ports:
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8081
      - MCP_SERVER_URL=http://mcp-server:8080
    depends_on:
      - mcp-server
    networks:
      - advanced-memory-network
    restart: unless-stopped

  # Blazor Frontend
  frontend:
    build:
      context: ../
      dockerfile: src/AdvancedMemory.Frontend/Dockerfile
    container_name: advanced-memory-frontend
    ports:
      - "8082:8082"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8082
      - API_BASE_URL=http://api-gateway:8081
    depends_on:
      - api-gateway
    networks:
      - advanced-memory-network
    restart: unless-stopped

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local
  qdrant_data:
    driver: local
  redis_data:
    driver: local

networks:
  advanced-memory-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16